Task 6: Create Methods for Managing Relationships 

To add, remove, or retrieve related objects, you should create methods within your SIS class or each 
relevant class. 

• AddEnrollment(student, course, enrollmentDate): In the SIS class, create a method that adds an 
enrollment to both the Student's and Course's enrollment lists. Ensure the Enrollment object 
references the correct Student and Course. 
• AssignCourseToTeacher(course, teacher): In the SIS class, create a method to assign a course to 
a teacher. Add the course to the teacher's AssignedCourses list. 
• AddPayment(student, amount, paymentDate): In the SIS class, create a method that adds a 
payment to the Student's payment history. Ensure the Payment object references the correct 
Student. 
• GetEnrollmentsForStudent(student): In the SIS class, create a method to retrieve all enrollments 
for a specific student. 
• GetCoursesForTeacher(teacher): In the SIS class, create a method to retrieve all courses 
assigned to a specific teacher. 

Create a Driver Program 

A driver program (also known as a test program or main program) is essential for testing and 
demonstrating the functionality of your classes and methods within your Student Information System 
(SIS) assignment. In this task, you will create a console application that serves as the entry point for your 
SIS and allows you to interact with and test your implemented classes and methods. 

Add References to Your SIS Classes 

Ensure that your SIS classes (Student, Course, Enrollment, Teacher, Payment) and the SIS class (if you 
have one to manage interactions) are defined in separate files within your project or are referenced 
properly. 

If you have defined these classes in separate files, make sure to include using statements in your driver 
program to access them: 

Implement the Main Method 

In the console application, the Main method serves as the entry point for your program. This is where 
you will create instances of your classes, call methods, and interact with your Student Information 
System.  

In the Main method, you create instances of your classes (e.g., Student, Course, and SIS) and then 
interact with your Student Information System by calling methods and handling exceptions. 

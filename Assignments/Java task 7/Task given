Task 7: Database Connectivity 

Database Initialization:  

Implement a method that initializes a database connection and creates tables for storing student, 
course, enrollment, teacher, and payment information. Create SQL scripts or use code-first migration to 
create tables with appropriate schemas for your SIS. 

Data Retrieval:  

Implement methods to retrieve data from the database. Users should be able to request information 
about students, courses, enrollments, teachers, or payments. Ensure that the data retrieval methods 
handle exceptions and edge cases gracefully. 

Data Insertion and Updating:  

Implement methods to insert new data (e.g., enrollments, payments) into the database and update 
existing data (e.g., student information). Use methods to perform data insertion and updating. 
Implement validation checks to ensure data integrity and handle any errors during these operations. 

Transaction Management:  

Implement methods for handling database transactions when enrolling students, assigning teachers, or 
recording payments. Transactions should be atomic and maintain data integrity. Use database 
transactions to ensure that multiple related operations either all succeed or all fail. Implement error 
handling and rollback mechanisms in case of transaction failures. 

Dynamic Query Builder:  

Implement a dynamic query builder that allows users to construct and execute custom SQL queries to 
retrieve specific data from the database. Users should be able to specify columns, conditions, and 
sorting criteria. Create a query builder method that dynamically generates SQL queries based on user 
input. Implement parameterization and sanitation of user inputs to prevent SQL injection. 
